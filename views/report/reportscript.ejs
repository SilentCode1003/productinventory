<script>
    $(document).ready(function () {
        let id = "";
        let name = "";
        let status = "";

        $('#dateRange').daterangepicker({
            opens: 'right',
            startDate: moment().startOf('month'),
            endDate: moment(),
            maxDate: moment(),
            ranges: {
                'This Week': [moment().startOf('week'), moment().endOf('week')],
                'Last Week': [moment().subtract(1, 'week').startOf('week'), moment().subtract(1, 'week').endOf('week')],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                'Last 2 Month': [moment().subtract(2, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                'Last 3 Month': [moment().subtract(3, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
            },
            alwaysShowCalendars: true,
            showCustomRangeLabel: false,
            buttonClasses: ['btn btn-outline-inventory'],
            locale: {
                format: 'MMM D, YYYY'
            }
        });

        $('#adjustDateBackward').on('click', function () {
            var startDate = $('#dateRange').data('daterangepicker').startDate;
            var endDate = $('#dateRange').data('daterangepicker').endDate.clone().subtract(7, 'days');
            $('#dateRange').data('daterangepicker').setEndDate(endDate);
            $('#dateRange').data('daterangepicker').setStartDate(startDate.clone().subtract(7, 'days'));
        });

        $('#adjustDateForward').on('click', function () {
            var startDate = $('#dateRange').data('daterangepicker').startDate;
            var endDate = $('#dateRange').data('daterangepicker').endDate.clone().add(7, 'days');
            $('#dateRange').data('daterangepicker').setStartDate(startDate.clone().add(7, 'days'));
            $('#dateRange').data('daterangepicker').setEndDate(endDate);
        });

        let initialdate = $('#dateRange').val();

        LoadTable();

        const historyloader = `  
          <tr>
            <td><div class="custom-loader"></div></td>
            <td><div class="custom-loader"></div></td>
            <td><div class="custom-loader"></div></td>
            <td><div class="custom-loader"></div></td>
            <td><div class="custom-loader"></div></td>
          </tr>`;

        const saleshistory = $('#salesreporthistory-table tbody');
        for (let i = 0; i < 5; i++) {
            saleshistory.append(historyloader);
        }

        $("#salesreporthistory-table tbody").on("click", "tr", function () {
            var dataRow = [];
            $(this)
                .closest("tr")
                .find("td")
                .each(function () {
                    dataRow.push($(this).text());
                });
            console.log(dataRow);
            id = dataRow[0];
            referenceno = dataRow[1];
            status = dataRow[4];
        });

        function filterTableRows() {
            const searchQuery = $("#search").val().trim().toLowerCase();
            let foundMatches = false;

            $("#no-match-row").remove();

            $("#datatable tbody tr").each(function () {
                const rowData = $(this).text().toLowerCase();
                if (rowData.includes(searchQuery)) {
                    $(this).show();
                    foundMatches = true;
                } else {
                    $(this).hide();
                }
            });

            if (!foundMatches) {
                const noMatchRow = $("<tr>").append(
                    $("<td>", {
                        colspan: 6,
                        class: "text-center",
                        text: "No Data Matched",
                    })
                );
                $("#datatable tbody").append(noMatchRow);
                noMatchRow.attr("id", "no-match-row");
            }
        }

        $("#search").on("input", filterTableRows);


        $(document).on('click', '.cbi-link', function () {
            console.log(referenceno);
            $.ajax({
                type: 'POST',
                url: '/report/salesreport',
                data: {
                    referenceno: referenceno,
                },
                success: function (result) {
                    var data = result.data;

                    let processeddata = salesreportdata(data)

                    const tableBody = $("#salesreport-table tbody");
                    tableBody.empty();
                    Object.keys(processeddata).forEach((key, index) => {
                        const itemsForDate = processeddata[key];
                        console.log(itemsForDate);
                        itemsForDate.forEach(item => {

                            const statusBackground = item.status === 'PAID' ? 'status-success' : 'status-warning';
                            const containerBackground = item.status === 'PAID' ? 'status-container-sc' : 'status-container-wr';

                            const tr = $("<tr>").append(
                                $("<td>", { text: key, "data-label": "Date", class: "custom-mobile-align", }),
                                $("<td>", { text: item.soldrefno, "data-label": "department", class: "custom-mobile-align", }),
                                $("<td>", { text: item.category, "data-label": "Created By", class: "custom-mobile-align", }),
                                $("<td>", { text: item.item, "data-label": "Created Date", class: "custom-mobile-align no-wrap", }),
                                $("<td>", { text: item.sellingprice, "data-label": "Created Date", class: "custom-mobile-align", }),
                                $("<td>", { text: item.deliveryfee, "data-label": "Created Date", class: "custom-mobile-align", }),
                                $("<td>", { text: item.quantity, "data-label": "Created Date", class: "custom-mobile-align", }),
                                $("<td>", { text: item.paymenttype, "data-label": "Created Date", class: "custom-mobile-align", }),
                                $("<td>", { text: item.transacrefno, "data-label": "Created Date", class: "custom-mobile-align", }),
                                $('<td>', { class: 'custom-mobile-align', 'data-label': 'Status' }).append(
                                    $('<div>', { class: containerBackground }).append(
                                        $('<span>', { text: item.status, class: statusBackground })
                                    )
                                )
                            );

                            tableBody.append(tr);

                        });
                    });
                    $(".id").text(id);
                    $.ajax({
                        type: 'POST',
                        url: '/report/historydetails',
                        data: {
                            id: id,
                        },
                        success: function (result) {
                            var myDiv = document.getElementById('historydata');
                            myDiv.innerHTML = '';
                            let data = result.data;
                            let historydata = data[0].date;
                            
                            if (data.length == 0) {
                                let historydiv = $(`
                                    <div class="row justify-content-center">
                                        <h5 class="">NO CURRENT HISTORY</h5>
                                    </div>
                                    <hr class="sidebar-divider">`);
                                $('#historydata').append(historydiv);
                            } else {
                                $.each(data, function (key, item) {
                                    var details = JSON.parse(item.date);
                                    
                                    console.log("test: ", details)
                                    if (details[0].sold) {
                                        let historydiv = $(`
                                    <div class="row">
                                        <div class="col-3 text-center">
                                            <div>
                                                <span class="">${details[0].sold.date}</span>
                                            </div>
                                        </div>
                                        <div class="col-3 text-center">
                                            <h5 class="">SOLD</h5>
                                        </div>
                                        <div class="col-6">
                                            <div class="row ml-1">
                                                <h5><span class="">${details[0].sold.details}</span></h5>
                                            </div>
                                        </div>
                                    </div>
                                    <hr class="sidebar-divider">`);
                                        $('#historydata').append(historydiv);
                                    }

                                    if (details.replace) {
                                        let historydiv = $(`
                                            <div class="row">
                                                <div class="col-3 text-center" style="margin-top: 50px;">
                                                    <div>
                                                        <span class="">${details.replace.date}</span>
                                                    </div>
                                                </div>
                                                <div class="col-3 text-center" style="margin-top: 50px;">
                                                    <h5 class="">Replaced</h5>
                                                </div>
                                                <div class="col-6">
                                                    <div class="row">
                                                        <h5>Replacement Serial: <span class="referenceno">${details.replace.replacedserial}</span></h5>
                                                    </div>
                                                    <div class="row">
                                                        <h5>Replaced By: <span class="">${details.replace.replacedby}</span></h5>
                                                    </div>
                                                    <div class="row">
                                                        <h5>Remarks: <span class="">${details.replace.remarks}</span></h5>
                                                    </div>
                                                    <div class="row">
                                                        <h5>Reference No.: <span class="referenceno">${details.replace.referenceno}</span></h5>
                                                    </div>
                                                </div>
                                            </div>
                                            <hr class="sidebar-divider">`);
                                        $('#historydata').append(historydiv);
                                    }

                                    if (details.deffective) {
                                        let historydiv = $(`
                                    <div class="row">
                                        <div class="col-3 text-center" style="margin-top: 20px;">
                                            <div>
                                                <span class="">${details.deffective.date}</span>
                                            </div>
                                        </div>
                                        <div class="col-3 text-center" style="margin-top: 20px;">
                                            <h5 class="">Defective</h5>
                                        </div>
                                        <div class="col-6">
                                            <div class="row">
                                                <h5>Remarks: <span class="">${details.deffective.remarks}</span></h5>
                                            </div>
                                            <div class="row">
                                                <h5>Reference No.: <span class="referenceno">${details.deffective.referenceno}</span></h5>
                                            </div>
                                        </div>
                                    </div>
                                    <hr class="sidebar-divider">`);
                                        $('#historydata').append(historydiv);
                                    }
                                });
                            }

                        },
                        error: function (err) {
                            errormsg(err);
                        }
                    });
                },
                error: function (err) {
                    errormsg(err);
                }
            });
        });

        function populatesalesreporthistory(data) {
            console.log(data);
            const tableBody = $("#salesreporthistory-table tbody");
            tableBody.empty();

            if (data.length === 0) {
                const tr = $("<tr>").append(
                    $("<td>", {
                        colspan: 6,
                        class: "text-center",
                        text: "No Data Matched",
                    })
                );
                tableBody.append(tr);
            } else {
                data.forEach((item) => {
                    let action = "";
                    action = `<span class="editbutton" id="editBtn" name="editBtn" data-toggle="modal" data-target="#editModal"><i class="fas fa-edit" style="color: rgb(99, 115, 129);"></i></span> `;

                    const statusBackground = item.status === 'PAID' ? 'status-success' : 'status-warning';
                    const containerBackground = item.status === 'PAID' ? 'status-container-sc' : 'status-container-wr';

                    const tr = $("<tr>").append(
                        $("<td>", {
                            text: item.id,
                            "data-label": "ID",
                            class: "custom-mobile-align",
                        }),
                        $("<td>", {
                            text: item.referenceno,
                            "data-label": "department",
                            class: "custom-mobile-align cbi-link",
                            "data-toggle": "modal",
                            "data-target": "#salesreportmodal",
                        }),
                        $('<td>', { class: 'custom-mobile-align', 'data-label': 'Status' }).append(
                            $('<div>', { class: containerBackground }).append(
                                $('<span>', { text: item.status, class: statusBackground })
                            )
                        ),
                        $("<td>", {
                            html: action,
                            "data-label": "Action",
                            class: "actionWidth",
                        })
                    );

                    tableBody.append(tr);
                });
            }
        }

        function LoadTable() {
            $.ajax({
                url: "/report/salesreporthistory",
                method: "GET",
                dataType: "json",
                success: function (data) {
                    // console.log("Data: ", data.data)
                    if (data.msg === "success") {
                        populatesalesreporthistory(data.data);
                    } else {
                        console.error(data.msg);
                    }
                },
                error: function (error) {
                    console.error(error);
                },
            });

        }

        $(document).on("input", "#employee", function () {
            $("#hiddenemmployeevalue").val("");
        });

        $('#convertopdf').on('click', function () {
            let daterange = $('#dateRange').val();
            let soldby;
            let employee;

            if ("<%= access%>" == "Admin") {
                soldby = $("#hiddenemmployeevalue").val();
                employee = $("#employee").val();
            } else {
                soldby = "<%= fullname%>";
            }

            let startDate = moment(daterange.split(' - ')[0], 'MMM D, YYYY');
            let endDate = moment(daterange.split(' - ')[1], 'MMM D, YYYY');
            let formattedStartDate = startDate.format('MM/DD/YYYY');
            let formattedEndDate = endDate.format('MM/DD/YYYY');
            let formattedDate = formattedStartDate + ' - ' + formattedEndDate;

            if (soldby !== '') {

                $.ajax({
                    type: "POST",
                    url: "/report/getsalesreport",
                    data: {
                        daterange: formattedDate,
                        soldby: soldby,
                    },
                    success: function (result) {
                        if (result.msg == "success") {
                            let container = result.data;
                            // console.log("Container: ", container)
                            let data = salesreportdata(container);
                            let template = 'SALES REPORT';
                            // console.log("Current Stock: ", groupedData);
                            if (data.length != 0) {
                                $.ajax({
                                    type: "POST",
                                    url: "/index/processpdfdata",
                                    data: {
                                        processeddata: data,
                                        template: template,
                                        employee: soldby,
                                        date: formattedDate,
                                    },
                                    success: function (result) {
                                        // console.log("MSG: ", result.msg)
                                        if (result.msg == "success") {
                                            window.open(`/index/generatepdf`, "_blank");
                                            success("Success", "PDF generate successfully!");
                                            $("#employee").val("");
                                            $("#hiddenemmployeevalue").val("");
                                        } else {
                                            info("Notice", "No Data within in the date range.");
                                        }
                                    },
                                    error: function (err) {
                                        errormsg(err);
                                    },
                                });
                            }
                        } else {
                            warning("Notice", "No Data within in the date range.")
                        }
                    },
                    error: function (err) {
                        errormsg(err);
                    },
                });
            } else {
                warning("Warning", "Empty Employee Field!");
            }
        });

        function salesreportdata(data) {
            // console.log(data);
            return data.reduce((result, current) => {
                const date = current.date;

                if (!result[date]) {
                    result[date] = [];
                }

                const matchingEntry = result[date].find(entry =>
                    entry.soldrefno === current.soldrefno &&
                    entry.transacrefno === current.transacrefno &&
                    entry.itemname === current.itemname &&
                    entry.category === current.category &&
                    entry.price === current.price &&
                    entry.deliveryfee === current.deliveryfee
                );

                if (matchingEntry) {
                    matchingEntry.quantity += current.quantity;
                } else {
                    result[date].push({ ...current });
                }

                return result;
            }, {});
        }

        let activeEmployee = [];

        function LoadList() {

            $.ajax({
                type: "GET",
                url: "/employee/load",
                success: function (result) {
                    let container = result.data;
                    // console.log(container)
                    $.each(container, (key, item) => {
                        let displayname = item.fullname;
                        let dataid = item.id;
                        activeEmployee.push({
                            display: displayname,
                            value: displayname,
                        });
                    });
                    populateCustomDropdown();
                },
                error: function (err) {
                    errormsg(err);
                },
            });
        }

        function populateCustomDropdown() {
            for (const employee of activeEmployee) {
                addOption("employeeDropdown", employee.display, employee.value);
            }
        }

        function addOption(dropdownId, displayText, actualValue) {
            const dropdownElement = document.getElementById(dropdownId);
            const hiddenInput = document.getElementById("hiddenemmployeevalue");

            const newOption = document.createElement("div");
            newOption.className = "dropdown-option";
            newOption.textContent = displayText;
            newOption.setAttribute("data-value", actualValue);

            newOption.addEventListener("click", function () {
                const inputElement = document.getElementById("employee");
                inputElement.value = displayText;
                hiddenInput.value = actualValue;
                dropdownElement.style.display = "none";
            });

            dropdownElement.appendChild(newOption);
        }

        function setupCustomDropdown(inputId, dropdownId, optionClass) {
            const inputElement = document.getElementById(inputId);
            const dropdownElement = document.getElementById(dropdownId);
            const options = dropdownElement.getElementsByClassName(optionClass);

            inputElement.addEventListener("click", function () {
                dropdownElement.style.display = "block";
            });

            for (const option of options) {
                option.addEventListener("click", function () {
                    inputElement.value = option.textContent;
                    const actualValue = option.getAttribute("data-value");
                    inputElement.setAttribute("data-actual-value", actualValue);
                    dropdownElement.style.display = "none";
                });
            }

            inputElement.addEventListener("input", function () {
                const value = inputElement.value.toUpperCase();
                for (const option of options) {
                    if (option.textContent.toUpperCase().includes(value)) {
                        option.style.display = "block";
                    } else {
                        option.style.display = "none";
                    }
                }
                dropdownElement.style.display = "block";
            });

            document.addEventListener("click", function (event) {
                const target = event.target;
                if (!dropdownElement.contains(target) && target !== inputElement) {
                    dropdownElement.style.display = "none";
                }
            });
        }

        setupCustomDropdown("employee", "employeeDropdown", "dropdown-option");
        LoadList();

    });
</script>