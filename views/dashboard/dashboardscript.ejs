<script>
    $(document).ready(function () {
        LoadList();
        let myChart;
        $('#dateRange').daterangepicker({
            opens: 'right',
            startDate: moment().subtract(7, 'days'),
            endDate: moment(),
            maxDate: moment(),
            ranges: {
                'This Week': [moment().startOf('week'), moment().endOf('week')],
                'Last Week': [moment().subtract(1, 'week').startOf('week'), moment().subtract(1, 'week').endOf('week')],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                'Last 2 Month': [moment().subtract(2, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                'Last 3 Month': [moment().subtract(3, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
            },
            alwaysShowCalendars: true,
            showCustomRangeLabel: false,
            buttonClasses: ['btn btn-outline-inventory'],
            locale: {
                format: 'MMM D, YYYY'
            }
        });

        $('#adjustDateBackward').on('click', function () {
            var startDate = $('#dateRange').data('daterangepicker').startDate;
            var endDate = $('#dateRange').data('daterangepicker').endDate.clone().subtract(7, 'days');
            $('#dateRange').data('daterangepicker').setEndDate(endDate);
            $('#dateRange').data('daterangepicker').setStartDate(startDate.clone().subtract(7, 'days'));
        });

        $('#adjustDateForward').on('click', function () {
            var startDate = $('#dateRange').data('daterangepicker').startDate;
            var endDate = $('#dateRange').data('daterangepicker').endDate.clone().add(7, 'days');
            $('#dateRange').data('daterangepicker').setStartDate(startDate.clone().add(7, 'days'));
            $('#dateRange').data('daterangepicker').setEndDate(endDate);
        });

        let initialdate = $('#dateRange').val();
        // getData(initialdate);

        $(document).on('change', '#categoryid', function() {    
            let category = $(this).val();
            let dateRange = $('#dateRange').val();
            if (myChart) {
                myChart.destroy();
            }
            console.log(category)
            getData(dateRange, category);
        });

        $(document).on('change', '#dateRange', function() {
            let dateRange = $(this).val();
            let category = $('#categoryid').val();
            if (myChart) {
                myChart.destroy();
            }
            console.log(dateRange)
            if(category != ''){
                getData(dateRange, category);
            }else{
                warning('Select Category', 'No Category Selected!')
            }
        });

        function LoadList() {
            $.ajax({
                type: "GET",
                url: "/category/load",
                success: function (result) {
                    let container = result.data;
                    $.each(container, (key, item) => {
                        let categoryname = item.name;
                        let categoryid = item.id;
                        console.log(categoryname);

                        var listItem = $("<li></li>")
                            .text(categoryname)
                            .data("categoryid", categoryname);

                        $(".categorylist").append(listItem);
                    });

                    $(".categorylist").on("click", "li", function () {
                        var selectedOption = $(this).text();
                        var selectedcategoryId = $(this).data("categoryid");

                        $("#selectedcategory").text(selectedOption);
                        $("#categoryid").val(selectedcategoryId).change();
                    });
                },
                error: function (err) {
                    errormsg(err);
                },
            });

        }

        function getData(daterange, category) {
            let startDate = moment(daterange.split(' - ')[0], 'MMM D, YYYY');
            let endDate = moment(daterange.split(' - ')[1], 'MMM D, YYYY');
            let formattedStartDate = startDate.format('MM/DD/YYYY');
            let formattedEndDate = endDate.format('MM/DD/YYYY');
            let formattedDate = formattedStartDate + ' - ' + formattedEndDate;
            console.log(formattedDate)
            console.log("Paylaod: ", daterange, category)
            $.ajax({
                url: '/sold/getsold',
                method: 'POST',
                dataType: 'json',
                data: {
                    daterange: formattedDate,
                    category: category
                },
                success: function (data) {
                    if (data.msg === 'success') {
                        console.log("Data: ", data.data)
                        if (data.data.length != 0){
                            var productByDate = {};

                            var allProducts = getAllProducts(data.data);
                            var allDates = getAllDatesInRange(startDate, endDate);

                            allDates.forEach(function (date) {
                                productByDate[date] = {};
                                allProducts.forEach(function (product) {
                                    productByDate[date][product] = 0;
                                });
                            });

                            data.data.forEach(function (item) {
                                var date = item.date;
                                var productName = item.productname;

                                productByDate[date] = productByDate[date] || {};
                                productByDate[date][productName] = (productByDate[date][productName] || 0) + 1;
                            });

                            console.log("data: ",productByDate);

                            const dates = Object.keys(productByDate);
                            const products = getAllProducts(data.data);

                            const chartData = {
                                labels: dates,
                                datasets: products.map(product => ({
                                    label: product,
                                    data: dates.map(date => productByDate[date][product] || 0),
                                    backgroundColor: 'rgb(69, 237, 242)', 
                                    borderColor: 'rgb(87, 125, 134)',
                                    borderWidth: 2,
                                    fill: false,
                                    lineTension: 0.4
                                })),
                            };

                            // Create the chart
                            const ctx = document.getElementById('myChart').getContext('2d');
                            const config = {
                                type: 'line',
                                data: chartData,
                                options: {
                                    maintainAspectRatio: false,
                                    scales: {
                                        x: {
                                            barPercentage: 0.5,
                                            grid: {
                                                display: false,
                                            },
                                        },
                                        y: {
                                            ticks: {
                                                callback: function (value, index, values) {
                                                    return `${value.toLocaleString(undefined, { maximumFractionDigits: 0 })}`;
                                                },
                                            },
                                        },
                                    },
                                    animation: {
                                        duration: 1000,
                                        easing: 'easeInOutQuad',
                                    },
                                    plugins: {
                                        legend: {
                                            labels: {
                                                font: {
                                                    family: 'Manrope',
                                                    size: 14, // Set the font size here
                                                },
                                            },
                                        },
                                        scales: {
                                            x: {
                                                ticks: {
                                                    font: {
                                                        family: 'Manrope',
                                                        size: 12,
                                                    },
                                                },
                                            },
                                            y: {
                                                ticks: {
                                                    font: {
                                                        family: 'Manrope',
                                                        size: 12,
                                                    },
                                                },
                                            },
                                        },
                                    },
                                },
                            };

                            myChart = new Chart(ctx, config);
                            $('#noDataMessage').hide();
                        }else{
                            $('#noDataMessage').show();
                        }

                    } else {
                        console.error(data.msg);
                    }
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function getAllDatesInRange(startDate, endDate) {
            var dates = [];
            var currentDate = moment(startDate);
            var end = moment(endDate);

            while (currentDate.isSameOrBefore(end)) {
                dates.push(currentDate.format('YYYY-MM-DD'));
                currentDate.add(1, 'days');
            }

            return dates;
        }

        function getAllProducts(data) {
            var products = new Set();
            data.forEach(function (item) {
                products.add(item.productname);
            });
            return Array.from(products);
        }

        function getAllDates(data) {
            var dates = new Set();
            data.forEach(function (item) {
                dates.add(item.date);
            });
            return Array.from(dates);
        }

    });
</script>