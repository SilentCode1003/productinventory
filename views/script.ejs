<!-- <div class="loader-wrapper">
  <div class="spinner"></div>
</div> -->
<!-- LOADER -->
<!-- <div class="loader-wrapper">
  <span class="loader"><span class="loader-inner"></span></span>
</div> -->

<!-- Logout Modal-->
<div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
  aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
        <button class="close" type="button" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">Ã—</span>
        </button>
      </div>
      <div class="modal-body">
        Select "Logout" below if you are ready to end your current session.
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary" type="button" data-dismiss="modal">
          Cancel
        </button>
        <button name="logoutBtn" id="logoutBtn" class="btn btn-primary">
          Logout
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Bootstrap core JavaScript-->
<script src="/vendor/jquery/jquery.min.js"></script>
<script src="/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

<!-- Core plugin JavaScript-->
<script src="/vendor/jquery-easing/jquery.easing.min.js"></script>

<!-- Custom scripts for all pCreated bys-->
<script src="/javascripts/js/sb-admin-2.min.js"></script>

<!-- DATE RANGE PICKER -->
<script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

<!-- SWAL-->
<script src="/javascripts/sweetalert.min.js"></script>
<script src="/javascripts/toastr.min.js"></script>

<!-- XLSX -->
<script src="/javascripts/xlsx.mini.min.js"></script>

<!-- Latest compiled and minified JavaScript -->
<script src="/javascripts/bootstrap-select.min.js"></script>

<!-- DATETIMEPICKER -->
<link rel="stylesheet" type="text/css" href="/stylesheets/css/DateTimePicker.min.css" />
<script type="text/javascript" src="/javascripts/DateTimePicker.min.js"></script>

<!--CHART-->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    setTimeout(function () {
      // Specify the IDs of the collapsible sections
      var collapseSectionIds = ['#ProductCollapse', '#EmplopyeeCollapse', '#ClientCollapse', '#ProductRequestCollapse'];

      collapseSectionIds.forEach(function (sectionId) {
        var collapseItems = document.querySelectorAll(sectionId + ' .collapse-item');

        collapseItems.forEach(function (item) {
          var iconElement = item.querySelector('i');

          if (iconElement) {
            if (item.classList.contains('active')) {
              iconElement.classList.remove('far');
              iconElement.classList.add('fas');
            } else {
              iconElement.classList.remove('fas');
              iconElement.classList.add('far');
            }
          }
        });
      });
    }, 100);
  });

  $("#searchproduct").on("click", function () {
    let searchdata = $("#searchdata").val();
    if (searchdata != '') {
      localStorage.setItem('searchdata', searchdata);
      location.replace("/search");
    } else {
      warning('Empty Input!', "Enter Asset Number/Serial Number!")
    }
  })

  // hidespinner();

  // function showspinner() {
  //   console.log("show loader");
  //   $(".loader-wrapper").show();
  // }

  // function hidespinner() {
  //   console.log("hide loader");

  //   setTimeout(() => {
  //     $(".loader-wrapper").hide();
  //   }, 1500);
  // }

  function successlogin(title, text) {
    return swal({
      title: title,
      text: text,
      icon: "success",
      buttons: {
        confirm: {
          text: "OK",
          value: true,
          visible: true,
          className: "swal-button-ok",
        }
      }
    }).then((result) => {
      return new Promise((resolve, reject) => {
        if (result === true) {
          resolve();
        } else {
          reject();
        }
      });
    });
  }

  function Loading(title) {
    toastr.info(
      `<strong>${title}</strong> <br>
        <div style="text-align: center; margin-top: 5px;">
          <div class="spinner-border" role="status" style="display: inline-block;">
            <span class="sr-only">Loading...</span>
          </div>
        </div>`,
      null,  // No title for the notification itself
      {
        "closeButton": false,
        "debug": false,
        "newestOnTop": true,
        "progressBar": false,
        "positionClass": "toast-top-right",
        "preventDuplicates": true,
        "onclick": null,
        "showDuration": "300",
        "hideDuration": "0",  // Set to 0 to make it indefinite until manually cleared
        "timeOut": "0",      // Set to 0 to make it indefinite until manually cleared
        "extendedTimeOut": "0",  // Set to 0 to make it indefinite until manually cleared
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "hide"
      }
    );
  }

  function success(title, text) {
    toastr.success(text, title, {
      "closeButton": false,
      "debug": false,
      "newestOnTop": true,
      "progressBar": true,
      "positionClass": "toast-top-right",
      "preventDuplicates": false,
      "onclick": null,
      "showDuration": "300",
      "hideDuration": "1000",
      "timeOut": "5000",
      "extendedTimeOut": "1000",
      "showEasing": "swing",
      "hideEasing": "linear",
      "showMethod": "fadeIn",
      "hideMethod": "fadeOut"
    })
  }

  function warning(title, text) {
    toastr.warning(text, title, {
      "closeButton": false,
      "debug": false,
      "newestOnTop": true,
      "progressBar": true,
      "positionClass": "toast-top-right",
      "preventDuplicates": false,
      "onclick": null,
      "showDuration": "300",
      "hideDuration": "1000",
      "timeOut": "5000",
      "extendedTimeOut": "1000",
      "showEasing": "swing",
      "hideEasing": "linear",
      "showMethod": "fadeIn",
      "hideMethod": "hide"
    });
  }

  function warningRegister(title, text) {
    toastr.warning(text, title, {
      "closeButton": false,
      "debug": false,
      "newestOnTop": true,
      "progressBar": true,
      "positionClass": "toast-top-right",
      "preventDuplicates": false,
      "onclick": null,
      "showDuration": "300",
      "hideDuration": "1000",
      "timeOut": "0",
      "extendedTimeOut": "0",
      "showEasing": "swing",
      "hideEasing": "linear",
      "showMethod": "fadeIn",
      "hideMethod": "hide"
    });
  }

  function warningInfo(title, text) {
    toastr.info(text, title, {
      "closeButton": false,
      "debug": false,
      "newestOnTop": true,
      "progressBar": true,
      "positionClass": "toast-top-right",
      "preventDuplicates": false,
      "onclick": null,
      "showDuration": "300",
      "hideDuration": "1000",
      "timeOut": "0",
      "extendedTimeOut": "0",
      "showEasing": "swing",
      "hideEasing": "linear",
      "showMethod": "fadeIn",
      "hideMethod": "hide"
    });
  }

  function hideLoading() {
    toastr.clear();
    console.log("Toastr Cleared!")
  }

  function info(title, text) {
    toastr.info(text, title, {
      "closeButton": false,
      "debug": false,
      "newestOnTop": true,
      "progressBar": true,
      "positionClass": "toast-top-right",
      "preventDuplicates": false,
      "onclick": null,
      "showDuration": "300",
      "hideDuration": "1000",
      "timeOut": "5000",
      "extendedTimeOut": "1000",
      "showEasing": "swing",
      "hideEasing": "linear",
      "showMethod": "fadeIn",
      "hideMethod": "fadeOut"
    });
  }

  function errormsg(err) {
    toastr.error(err, "Error!", {
      "closeButton": false,
      "debug": false,
      "newestOnTop": true,
      "progressBar": true,
      "positionClass": "toast-top-right",
      "preventDuplicates": false,
      "onclick": null,
      "showDuration": "300",
      "hideDuration": "1000",
      "timeOut": "5000",
      "extendedTimeOut": "1000",
      "showEasing": "swing",
      "hideEasing": "linear",
      "showMethod": "fadeIn",
      "hideMethod": "fadeOut"
    });
  }

  function success(title, text) {
    toastr.success(text, title, {
      "closeButton": false,
      "debug": false,
      "newestOnTop": true,
      "progressBar": true,
      "positionClass": "toast-top-right",
      "preventDuplicates": false,
      "onclick": null,
      "showDuration": "300",
      "hideDuration": "1000",
      "timeOut": "5000",
      "extendedTimeOut": "1000",
      "showEasing": "swing",
      "hideEasing": "linear",
      "showMethod": "fadeIn",
      "hideMethod": "fadeOut"
    });
  }

  function warning(title, text) {
    toastr.warning(text, title, {
      "closeButton": false,
      "debug": false,
      "newestOnTop": true,
      "progressBar": true,
      "positionClass": "toast-top-right",
      "preventDuplicates": false,
      "onclick": null,
      "showDuration": "300",
      "hideDuration": "1000",
      "timeOut": "5000",
      "extendedTimeOut": "1000",
      "showEasing": "swing",
      "hideEasing": "linear",
      "showMethod": "fadeIn",
      "hideMethod": "fadeOut"
    });
  }

  function info(title, text) {
    toastr.info(text, title, {
      "closeButton": false,
      "debug": false,
      "newestOnTop": true,
      "progressBar": true,
      "positionClass": "toast-top-right",
      "preventDuplicates": false,
      "onclick": null,
      "showDuration": "300",
      "hideDuration": "1000",
      "timeOut": "5000",
      "extendedTimeOut": "1000",
      "showEasing": "swing",
      "hideEasing": "linear",
      "showMethod": "fadeIn",
      "hideMethod": "fadeOut"
    });
  }

  function errormsg(err) {
    toastr.error(err, "Error!", {
      "closeButton": false,
      "debug": false,
      "newestOnTop": true,
      "progressBar": true,
      "positionClass": "toast-top-right",
      "preventDuplicates": false,
      "onclick": null,
      "showDuration": "300",
      "hideDuration": "1000",
      "timeOut": "5000",
      "extendedTimeOut": "1000",
      "showEasing": "swing",
      "hideEasing": "linear",
      "showMethod": "fadeIn",
      "hideMethod": "fadeOut"
    });
  }

  $(document).on("click", "#logoutBtn", function () {
    $.ajax({
      type: "POST",
      url: "/login/logout",
      success: function (result) {
        success("Logout", "Successfully");
        location.replace("/");
      },
      error: function (err) {
        errormsg(err);
      },
    });
  });

  const numberInputs = document.querySelectorAll(".number-validator");

  numberInputs.forEach(function (input) {
    input.addEventListener("input", function () {
      const inputValue = this.value;

      if (inputValue.length === 1 && inputValue === "0") {
        this.value = "";
      } else if (!/^\d*$/.test(inputValue)) {
        this.value = inputValue.replace(/\D/g, "");
      }
    });
  });

  function ClearTable(name) {
    $(`#${name}`).find("tr:gt(0)").remove();
  }

  function ConvertToCurrency(val) {
    return `â‚± ${parseFloat(val)
      .toFixed(2)
      .replace(/\d(?=(\d{3})+\.)/g, "$&,")}`;
  }

  function RemoveCurrencyFormatting(val) {
    return val.replace(/[^\d.-]/g, "");
  }

  function formatCurrencyUsd(value) {
    if (!value) {
      return '$0.00';
    }
    var formattedValue = parseFloat(value).toFixed(2);
    return '$' + formattedValue.replace(/\d(?=(\d{3})+\.)/g, '$&,');
  }

  function formatCurrencyPhp(value) {
    if (!value) {
      return '$0.00';
    }
    var formattedValue = parseFloat(value).toFixed(2);
    return 'â‚±' + formattedValue.replace(/\d(?=(\d{3})+\.)/g, '$&,');
  }

  function formatCurrency(value) {
    if (!value) {
      return '$0.00';
    }
    var formattedValue = parseFloat(value).toFixed(2);
    return '$' + formattedValue.replace(/\d(?=(\d{3})+\.)/g, '$&,');
  }

  $(document).ready(function () {  
    if ($('.collapse-item.active').length > 0) {
      $('.collapse-item.active').closest('.collapse').addClass('show');
    }

    $('.collapse-item').click(function () {
      $('.collapse-item').removeClass('active');
      $(this).addClass('active');
    });

    var path = window.location.pathname;

    $('.collapse-item').each(function () {
      var href = $(this).attr('href');
      if (path === href) {
        $(this).addClass('active');
        $(this).closest('.collapse').addClass('show');
      }
    });

    function adjustCollapse() {
      if ($(window).width() <= 767) {
        $('.collapse').removeClass('show');
        $('.row.d-flex.justify-content-center.align-items-center').removeClass('login-height');
      } else {
        $('.collapse-item.active').closest('.collapse').addClass('show');
      }
    }
    adjustCollapse();

    $(window).resize(function () {
      adjustCollapse();
    });

    $(document).on('click', function (event) {
      if ($(window).width() <= 767) {
        if (!$(event.target).closest('.collapse').length) {
          $('.collapse').removeClass('show');
        }
      }

    });
  });

  $('.customdropdown').click(function () {
    $(this).attr('tabindex', 1).focus();
    $(this).toggleClass('active');
    $(this).find('.customdropdown-menu').slideToggle(300);
  });
  $('.customdropdown').focusout(function () {
    $(this).removeClass('active');
    $(this).find('.customdropdown-menu').slideUp(300);
  });
  $('.customdropdown .customdropdown-menu li').click(function () {
    $(this).parents('.customdropdown').find('span').text($(this).text());
    $(this).parents('.customdropdown').find('input').attr('value', $(this).attr('id'));
  });

  $(document).ready(function () {
    let isSidebarOpen = localStorage.getItem('isSidebarOpen') === 'true';

    function updateSidebarState() {
      $("body").toggleClass("sidebar-toggled", isSidebarOpen);
      $(".sidebar").toggleClass("toggled", isSidebarOpen);

      if (isSidebarOpen) {
        $('.sidebar .collapse').collapse('hide');
        $('#content').toggleClass('content-toggled');
        $('.navbar').toggleClass('navbar-toggled');
        $('.sticky-footer').toggleClass('footer-toggled');
      } else {
        $('#content').removeClass('content-toggled');
        $('.navbar').removeClass('navbar-toggled');
        $('.sticky-footer').removeClass('footer-toggled');
      }
    }

    updateSidebarState();

    $("#sidebarToggle, #sidebarToggleTop").on('click', function (e) {
      isSidebarOpen = !isSidebarOpen;

      localStorage.setItem('isSidebarOpen', isSidebarOpen);

      updateSidebarState();
    });
  });

  const toggleButton = document.getElementById("toggleButton");
  const toggleView = document.querySelector(".toggle-view");
  let isOpen = false;
  if (toggleButton != null && toggleView != null) {
    toggleButton.addEventListener("click", function () {
      if (!isOpen) {
        toggleView.style.display = "block";
        toggleView.style.height = toggleView.scrollHeight + "px";
        toggleButton.innerHTML = '<i class="fas fa-chevron-up"></i>';
      } else {
        toggleView.style.height = "0";
        setTimeout(() => {
          toggleView.style.display = "none";
        }, 500);
        toggleButton.innerHTML = '<i class="fas fa-plus"></i>';
      }

      isOpen = !isOpen;
    });
  }

  function formatPrice(event, input) {
    event.preventDefault();

    const cursorPosition = input.selectionStart;
    const originalValue = input.value;
    const defaultValue = '$0.00';
    const currentValue = originalValue || defaultValue;

    let value = currentValue.replace(/[^0-9.]/g, '');
    let number = parseFloat(value);

    if (!isNaN(number)) {
      const formattedValue = number.toLocaleString('en-PH', {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      });

      input.value = formattedValue;

      let newPosition = cursorPosition + (formattedValue.indexOf('.') > currentValue.indexOf('.') ? 1 : 0);

      // Set the new cursor position
      input.setSelectionRange(newPosition, newPosition);
    } else {
      input.value = defaultValue;
    }
  }
</script>