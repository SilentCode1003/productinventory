<script>
  $(document).ready(function () {
    //Functionality
    let itemid = "";
    let status = "";

    LoadTable();

    $("#datatable tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      // console.log(dataRow);
      itemid = dataRow[0];
      status = dataRow[3];
    });

    $(document).on("click", "#editBtn", function () {
      $("#itemidmodal").val(itemid);
    });

    $(document).on("input", "#itemname", function () {
      $("#hiddenValue").val("");
    });

    $(document).on("click", "#addBtn", function () {
      let itemid = $("#hiddenValue").val();
      let itemname = $("#itemname").val();
      let fobprice = $("#fobprice").val();

      var message = "";

      if (itemid == "") {
        message += "Item does not Exist " + `${itemname}, `;
      }
      if (fobprice == "") {
        message += "Empty FOB Price";
      }

      if (message != "") {
        warning("Required", `${message}`);
      } else {
        let refineFobPrice = fobprice.replace(/,|\$/g, "");
        // console.log(itemid, itemname, refineFobPrice)
        $.ajax({
          type: "POST",
          url: "/itemprice/save",
          data: {
            itemid: itemid,
            fobprice: refineFobPrice,
          },
          success: function (result) {
            if (result.msg == "success") {
              LoadTable();
              $("#itemname").val("");
              $("#hiddenValue").val("");
              $("#fobprice").val("");
              success("Saved", "Successfully");
            }

            if (result.msg == "exist") {
              warning("Exist", `${itemname} is already registered!`);
            }
          },
          error: function (err) {
            errormsg(err);
          },
        });
      }
    });

    function populatedatatable(data) {
      // console.log(data);
      const tableBody = $("#datatable tbody");
      tableBody.empty();

      if (data.length === 0) {
        const tr = $("<tr>").append(
          $("<td>", {
            colspan: 7,
            class: "text-center",
            text: "No Data Matched",
          })
        );
        tableBody.append(tr);
      } else {
        let action = "";

        data.forEach((item) => {
          if (item.status === "ACTIVE") {
            action = `
                            <span class="editbutton" id="editBtn" name="editBtn" data-toggle="modal" data-target="#editModal"><i class="fas fa-edit" style="color: #45edf2;"></i></span>
                            <span class="editbutton" id="inactiveBtn"><i class="fas fa-eye-slash" style="color: #45edf2;"></i></span>`;
          } else if (item.status === "INACTIVE") {
            action = `
                            <span class="editbutton" id="editBtn" name="editBtn" data-toggle="modal" data-target="#editModal"><i class="fas fa-edit" style="color: #45edf2;"></i></span>
                            <span class="editbutton" id="activeBtn"><i class="fas fa-eye" style="color: #45edf2;"></i></span>`;
          }
          const tr = $("<tr>").append(
            $("<td>", {
              text: item.id,
              "data-label": "ID",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.itemid,
              "data-label": "Item ID",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: formatCurrency(item.fobprice),
              "data-label": "FOB Price",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.status,
              "data-label": "Status",
              class: "custom-mobile-align",
            }),
            $("<td>", {
              text: item.createdby,
              "data-label": "Created By",
              class: "custom-mobile-align no-wrap",
            }),
            $("<td>", {
              text: item.createddate,
              "data-label": "Created Date",
              class: "custom-mobile-align no-wrap",
            }),
            $("<td>", {
              html: action,
              // "data-label": "Created Date",
              // class: "custom-mobile-align no-wrap",
            })
          );
          tableBody.append(tr);
        });
      }
    }

    function LoadTable() {
      $(".progress").hide();
      $(".progress").slideDown();

      $.ajax({
        url: "/itemprice/load",
        method: "GET",
        dataType: "json",
        xhrFields: {
          onprogress: function (e) {
            if (e.lengthComputable) {
              var percentComplete = (e.loaded / e.total) * 100;
              $(".progress-bar").css("width", percentComplete + "%");
            }
          },
        },
        success: function (data) {
          setTimeout(function () {
            $(".progress").slideUp(function () {
              if (data.msg === "success") {
                populatedatatable(data.data);
              } else {
                console.error(data.msg);
              }
            });
          }, 1000);
        },
        error: function (error) {
          console.error(error);
        },
      });
    }

    //#region EDIT SCRIPTS
    $(document).on("click", "#updateBtn", function () {
      let itemid = $("#itemidmodal").val();
      let fobprice = $("#fobpricemodal").val();

      var message = "";

      if (fobprice == "") {
        message += "FOB Price ";
      }

      if (message != "") {
        warning("Required", `Please fill up ${message}`);
      } else {
        let refineFobPrice = fobprice.replace(/,|$/g, "");
        $.ajax({
          type: "POST",
          url: "/itemprice/edit",
          data: {
            itempriceid: itemid,
            fobprice: refineFobPrice,
          },
          success: function (result) {
            if (result.msg == "success") {
              LoadTable();
              success("Saved", "Successfully");
              $("#fobpricemodal").val("");
              $("#editModal").modal("hide");
            }

            if (result.msg == "exist") {
              warning("Exist", `${categorynamemodal} already exist!`);
            }
          },
          error: function (err) {
            errormsg(err);
          },
        });
      }
    });

    $(document).on("click", "#activeBtn", function () {
      console.log(itemid);
      console.log(status);
      $.ajax({
        type: "POST",
        url: "/itemprice/status",
        data: {
          status: status,
          id: itemid,
        },
        success: function (result) {
          if (result.msg == "success") {
            LoadTable();
            success("Saved", "Successfully");
          }

          if (result.msg == "notexist") {
            warning(`${itemid} does not exist!`);
          }
        },
        error: function (err) {
          errormsg(err);
        },
      });
    });

    $(document).on("click", "#inactiveBtn", function () {
      console.log(itemid);
      console.log(status);
      $.ajax({
        type: "POST",
        url: "/itemprice/status",
        data: {
          status: status,
          id: itemid,
        },
        success: function (result) {
          if (result.msg == "success") {
            LoadTable();
            success("Saved", "Successfully");
          }

          if (result.msg == "notexist") {
            warning(`${itemid} does not exist!`);
          }
        },
        error: function (err) {
          errormsg(err);
        },
      });
    });
    //#endregion

    //#region CUSTOM DROPDOWN INPUT
    let activeItems = [];

    function LoadList() {
      // console.log("triggered");
      $.ajax({
        type: "GET",
        url: "/items/load",
        success: function (result) {
          let container = result.data;
          // console.log("data: ", container);
          $.each(container, (key, item) => {
            activeItems.push({ display: item.name, value: item.id });
          });
          populateCustomDropdown();
        },
        error: function (err) {
          errormsg(err);
        },
      });
    }

    function populateCustomDropdown() {
      for (const serial of activeItems) {
        addOption("itemDropdown", serial.display, serial.value);
      }
    }

    function setupCustomDropdown(inputId, dropdownId, optionClass) {
      const inputElement = document.getElementById(inputId);
      const dropdownElement = document.getElementById(dropdownId);
      const options = dropdownElement.getElementsByClassName(optionClass);

      inputElement.addEventListener("click", function () {
        dropdownElement.style.display = "block";
      });

      for (const option of options) {
        option.addEventListener("click", function () {
          inputElement.value = option.textContent;
          const actualValue = option.getAttribute("data-value");
          inputElement.setAttribute("data-actual-value", actualValue);
          dropdownElement.style.display = "none";
        });
      }

      inputElement.addEventListener("input", function () {
        const value = inputElement.value.toUpperCase();
        for (const option of options) {
          if (option.textContent.toUpperCase().includes(value)) {
            option.style.display = "block";
          } else {
            option.style.display = "none";
          }
        }
        dropdownElement.style.display = "block";
      });

      document.addEventListener("click", function (event) {
        const target = event.target;
        if (!dropdownElement.contains(target) && target !== inputElement) {
          dropdownElement.style.display = "none";
        }
      });
    }

    function addOption(dropdownId, displayText, actualValue) {
      const dropdownElement = document.getElementById(dropdownId);
      const hiddenInput = document.getElementById("hiddenValue");

      const newOption = document.createElement("div");
      newOption.className = "dropdown-option";
      newOption.textContent = displayText;
      newOption.setAttribute("data-value", actualValue);

      newOption.addEventListener("click", function () {
        const inputElement = document.getElementById("itemname");
        inputElement.value = displayText;
        hiddenInput.value = actualValue;
        dropdownElement.style.display = "none";
      });

      dropdownElement.appendChild(newOption);
    }

    function addOption2(dropdownId, displayText, actualValue) {
      const dropdownElement = document.getElementById(dropdownId);
      const hiddenInput = document.getElementById("hiddenSerialValue");

      const newOption = document.createElement("div");
      newOption.className = "dropdown-option";
      newOption.textContent = displayText;
      newOption.setAttribute("data-value", actualValue);

      newOption.addEventListener("click", function () {
        const inputElement = document.getElementById("serialname");
        inputElement.value = displayText;
        hiddenInput.value = actualValue;
        dropdownElement.style.display = "none";
      });

      dropdownElement.appendChild(newOption);
    }

    setupCustomDropdown("itemname", "itemDropdown", "dropdown-option");
    LoadList();
    //#endregion

    function filterTableRows() {
      const searchQuery = $("#search").val().trim().toLowerCase();
      let foundMatches = false;

      $("#no-match-row").remove();

      $("#datatable tbody tr").each(function () {
        const rowData = $(this).text().toLowerCase();
        if (rowData.includes(searchQuery)) {
          $(this).show();
          foundMatches = true;
        } else {
          $(this).hide();
        }
      });

      if (!foundMatches) {
        const noMatchRow = $("<tr>").append(
          $("<td>", {
            colspan: 7,
            class: "text-center",
            text: "No Data Matched",
          })
        );
        $("#datatable tbody").append(noMatchRow);
        noMatchRow.attr("id", "no-match-row");
      }
    }

    $("#search").on("input", filterTableRows);
    //#region Upload
    $(document).on("click", "#uploadButton", function () {
      //   console.log("clicked!");
      let uploaddata = $("#fileinput").val();
      if (uploaddata != "") {
        showspinner();
        UploadProcess();
      } else {
        warning("Warning!", "No File Chosen!");
      }
    });

    function UploadProcess() {
      //Reference the FileUpload element.
      var fileUpload = document.getElementById("fileinput");

      //Validate whether File is valid Excel file.
      var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx|.csv|.ods)$/;
      if (regex.test(fileUpload.value.toLowerCase())) {
        if (typeof FileReader != "undefined") {
          var reader = new FileReader();

          //For Browsers other than IE.
          if (reader.readAsBinaryString) {
            reader.onload = function (e) {
              GetTableFromExcel(e.target.result);
            };
            reader.readAsBinaryString(fileUpload.files[0]);
          } else {
            //For IE Browser.
            reader.onload = function (e) {
              var data = "";
              var bytes = new Uint8Array(e.target.result);
              for (var i = 0; i < bytes.byteLength; i++) {
                data += String.fromCharCode(bytes[i]);
              }
              GetTableFromExcel(data);
            };
            reader.readAsArrayBuffer(fileUpload.files[0]);
          }
        } else {
          warning("Upload", "This browser does not support HTML5.");
        }
      } else {
        warning("Upload", "Please upload a valid Excel file.");
      }
    }

    function GetTableFromExcel(data) {
      //Read the Excel File data in binary
      var workbook = XLSX.read(data, {
        type: "binary",
      });

      //get the name of First Sheet.
      var Sheet = workbook.SheetNames[0];

      //Read all rows from First Sheet into an JSON array.
      var excelRows = XLSX.utils.sheet_to_row_object_array(
        workbook.Sheets[Sheet]
      );
      var columns = Object.keys(excelRows[0]);

      //Create a HTML Table element.
      var myTable = document.createElement("table");
      myTable.border = "1";

      //Add the header row.
      var row = myTable.insertRow(-1);

      var dataExcelArr = [];
      //Add the data rows from Excel file.
      for (var i = 0; i < excelRows.length; i++) {
        //Add the data row.
        var data = [];
        var row = myTable.insertRow(-1);
        for (var j = 0; j < columns.length; j++) {
          var cell = row.insertCell(-1);
          cell.innerHTML = excelRows[i][columns[j]];
          data.push({
            item: excelRows[i][columns[j]],
          });
        }
        dataExcelArr.push({
          category: data[0].item,
          itemname: data[1].item,
          fobprice: data[2].item,
        });
      }
      excelDataSave(dataExcelArr);
    }

    function excelDataSave(data) {
      var dataraw = JSON.stringify(data, null, 2);
      console.log(dataraw);
      $.ajax({
        type: "POST",
        url: "/itemprice/upload",
        data: {
          data: dataraw,
        },
        success: function (result) {
          hidespinner();
          if (result.msg != "success") {
            warning(
              "Duplicate",
              `Some data already exist on the database. ID[${result.data}]`
            );

            // swal({
            //   title: "Exist",
            //   text: "Some data already exist on the database. ID[${result.data}]",
            //   icon: "warning",
            //   button: "OK!",
            // });
          } else {
            success("Saved!", "Data saved!");
            LoadTable();
            // swal({
            //   title: "Success",
            //   text: "Data saved!",
            //   icon: "success",
            //   button: "OK!",
            // });
          }

          // $('#item-tbl').DataTable().ajax.reload();
        },
        error: function (result) {
          console.error(result);
        },
      });
    }
    //#endregion
  });
</script>
