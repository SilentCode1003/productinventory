<script>
    $(document).ready(function () {
        //Functionality
        let assetcontrol = "";

        LoadTable();

        $('#data-table tbody').on('click', 'tr', function () {
            var dataRow = [];
            $(this).closest('tr').find('td').each(function () {
                dataRow.push($(this).text());
            });
            console.log(dataRow);
            assetcontrol = dataRow[0];
        })

        $(document).on('click', '#addBtn', function () {
            // const actualValue = $('#hiddenSerialValue').val();
            
            let data = $('#serialname').val();
            let returnfrom = $('#returnfrom').val();
            let returnby = $('#returnbyid').val();
            let referenceno = $('#referenceno').val();
            let date = $('#date').val();
            let splitData = data.split(' ');

            var message = "";
            if (data == '') { message += 'Serial and Asset Control, ' }
            if (returnfrom == '') { message += 'Deploy To, ' }
            if (returnby == '') { message += 'Deploy By, ' }
            if (referenceno == '') { message += 'referenceno, ' }
            if (date == '') { message += 'Date, ' }

            if (message != '') {
                warning('Required', `Please fill up ${message}`);
            }
            else {
                let serial = splitData[0];
                let assetControl = splitData[1].replace('(', '').replace(')', '');
                console.log(assetControl, serial, date, returnby, returnfrom, referenceno )
                $.ajax({
                    type: 'POST',
                    url: '/return/save',
                    data: {
                        assetcontrol: assetControl,
                        serial: serial,
                        date: date,
                        returnby: returnby,
                        returnfrom: returnfrom,
                        referenceno: referenceno
                    },
                    success: function (result) {
                        if (result.msg == 'success') {
                            LoadTable()
                            success('Saved', 'Successfully')
                            $('#serial').val('');
                            $('#deployto').val('');
                            $('#referenceno').val('');
                            $("#serialname").val('');
                            $("#hiddenReturnFromValue").val('');
                            $("#date").val('');
                        }

                        if (result.msg == 'exist') {
                            warning('Exist', `${serial} already exist!`);
                        }

                    },
                    error: function (err) {
                        errormsg(err);
                    }
                })
            }
        })

        function populatetable(data) {
            console.log(data);
            const tableBody = $('#datatable tbody');
            tableBody.empty();

            if (data.length === 0) {
                const tr = $('<tr>').append($('<td>', {
                    colspan: 7,
                    class: 'text-center',
                    text: 'No Data Matched'
                }));
                tableBody.append(tr);
            } else {
                data.forEach(item => {
                    const tr = $('<tr>').append(
                        $('<td>', { text: item.id, 'data-label': 'ID', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.assetcontrol, 'data-label': 'Asset Control', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.serial, 'data-label': 'Serial', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.date, 'data-label': 'Date', class: 'custom-mobile-align no-wrap' }),
                        $('<td>', { text: item.returnby, 'data-label': 'Returned By', class: 'custom-mobile-align no-wrap' }),
                        $('<td>', { text: ite.returnfrom, 'data-label': 'Returned To', class: 'custom-mobile-align' }),
                        $('<td>', { text: item.referenceno, 'data-label': 'Reference No.', class: 'custom-mobile-align' }),
                    );
                    tableBody.append(tr);
                });
            }
        }

        function LoadTable() {
            $(".progress").hide();
            $(".progress").slideDown();
            $.ajax({
                url: '/return/load',
                method: 'GET',
                dataType: 'json',
                xhrFields: {
                    onprogress: function (e) {
                        if (e.lengthComputable) {
                            var percentComplete = (e.loaded / e.total) * 100;
                            $(".progress-bar").css("width", percentComplete + "%");
                        }
                    }
                },
                success: function (data) {
                    setTimeout(function () {
                        $(".progress").slideUp(function () {
                            if (data.msg === 'success') {
                                populatetable(data.data);
                            } else {
                                console.error(data.msg);
                            }
                        });
                    }, 1000);
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }

        //#region CUSTOM DROPDOWN INPUT
        let activeSerial = [];
        let activeDeployLocation = [];
        function LoadList() {
            // console.log("triggered");
            $.ajax({
                type: "GET",
                url: "/product/load",
                success: function (result) {
                    let container = result.data;
                    // console.log(container);
                    $.each(container, (key, item) => {
                        let newname = item.serial + " (" + item.assetcontrol + ")";
                        activeSerial.push({ display: newname, value: item.serial });
                    });
                    populateCustomDropdown1();
                },
                error: function (err) {
                    errormsg(err);
                },
            });

            $.ajax({
                type: "GET",
                url: "/client/load",
                success: function (result) {
                    let container = result.data;
                    $.each(container, (key, item) => {
                        let displayname = item.company + " - " + item.branch;
                        activeDeployLocation.push({ display: displayname, value: displayname });
                    });
                    populateCustomDropdown();
                },
                error: function (err) {
                    errormsg(err);
                },
            });

            $.ajax({
                type: "GET",
                url: "/employee/load",
                success: function (result) {
                    let container = result.data;
                    $.each(container, (key, item) => {
                        let displayname = item.fullname;
                        let dataid = item.id;
                        // console.log(displayname);

                        var listItem = $("<li></li>")
                            .text(displayname)
                            .data("dataid", dataid);

                        $(".returnbylist").append(listItem);
                    });

                    $(".returnbylist").on("click", "li", function () {
                        var selectedOption = $(this).text();
                        var selectedreturnbyId = $(this).data("dataid");

                        $("#selectedreturnby").text(selectedOption);
                        $("#returnbyid").val(selectedreturnbyId).change();
                    });
                },
                error: function (err) {
                    errormsg(err);
                },
            });
        
        }

        function populateCustomDropdown1() {
            for (const serial of activeSerial) {
                addOption1("serialDropdown", serial.display, serial.value);
            }
        }

        function populateCustomDropdown() {
            for (const returnfrom of activeDeployLocation) {
                addOption2("returnfromDropdown", returnfrom.display, returnfrom.value);
            }
        }

        function setupCustomDropdown(inputId, dropdownId, optionClass) {
            const inputElement = document.getElementById(inputId);
            const dropdownElement = document.getElementById(dropdownId);
            const options = dropdownElement.getElementsByClassName(optionClass);

            inputElement.addEventListener("click", function () {
                dropdownElement.style.display = "block";
            });

            for (const option of options) {
                option.addEventListener("click", function () {
                    inputElement.value = option.textContent;
                    const actualValue = option.getAttribute("data-value");
                    inputElement.setAttribute("data-actual-value", actualValue);
                    dropdownElement.style.display = "none";
                });
            }

            inputElement.addEventListener("input", function () {
                const value = inputElement.value.toUpperCase();
                for (const option of options) {
                    if (option.textContent.toUpperCase().includes(value)) {
                        option.style.display = "block";
                    } else {
                        option.style.display = "none";
                    }
                }
                dropdownElement.style.display = "block";
            });

            document.addEventListener("click", function (event) {
                const target = event.target;
                if (!dropdownElement.contains(target) && target !== inputElement) {
                    dropdownElement.style.display = "none";
                }
            });
        }

        function addOption1(dropdownId, displayText, actualValue) {
            const dropdownElement = document.getElementById(dropdownId);
            const hiddenInput = document.getElementById("hiddenSerialValue");

            const newOption = document.createElement("div");
            newOption.className = "dropdown-option";
            newOption.textContent = displayText;
            newOption.setAttribute("data-value", actualValue); // Store the actual value in a data attribute

            newOption.addEventListener("click", function () {
                const inputElement = document.getElementById("serialname");
                inputElement.value = displayText; // Display the text in the input field
                hiddenInput.value = actualValue; // Update the hidden input field with the actual value
                dropdownElement.style.display = "none";
            });

            dropdownElement.appendChild(newOption);
        }

        function addOption2(dropdownId, displayText, actualValue) {
            const dropdownElement = document.getElementById(dropdownId);
            const hiddenInput = document.getElementById("hiddenReturnFromValue");

            const newOption = document.createElement("div");
            newOption.className = "dropdown-option";
            newOption.textContent = displayText;
            newOption.setAttribute("data-value", actualValue); // Store the actual value in a data attribute

            newOption.addEventListener("click", function () {
                const inputElement = document.getElementById("returnfrom");
                inputElement.value = displayText; // Display the text in the input field
                hiddenInput.value = actualValue; // Update the hidden input field with the actual value
                dropdownElement.style.display = "none";
            });

            dropdownElement.appendChild(newOption);
        }

        setupCustomDropdown("serialname", "serialDropdown", "dropdown-option");
        setupCustomDropdown("returnfrom", "returnfromDropdown", "dropdown-option");
        LoadList()
        //#endregion

    })
</script>